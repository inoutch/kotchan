buildscript {
    ext.kotlin_version = "1.3.20"

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "kotlin-multiplatform"

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
}

kotlin {
    targets {
        fromPreset(presets.iosArm64, "ios") {
            compilations.main {
                outputKinds "EXECUTABLE"
                cinterops {
                    vulkan {
                        defFile project.file("../../src/nativeInterop/cinterop/vulkan.def")
                        includeDirs "${System.getenv()["VULKAN_SDK"]}/MoltenVK/include"
                        compilerOpts "-L ${System.getenv()["VULKAN_SDK"]}/MoltenVK/iOS/static"
                    }
                    kmvk {
                        defFile project.file("../../src/nativeInterop/cinterop/kmvk.def")
                        includeDirs "../../native/MVKView/build/Release/include"
                    }
                }
            }
        }
    }
    sourceSets {
        commonMain {
            kotlin.srcDirs("../../src/commonMain/kotlin", "../common/src/main/kotlin")
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
            }
        }
        iosMain {
            kotlin.srcDirs("../../src/iosMain/kotlin", "src")
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
            }
        }
    }
}
