allprojects {
    version "0.4.0"
    group "io.github.inoutch"
}

buildscript {
    ext.kotlin_version = "1.3.50"
    ext.lwjgl_version = "3.2.2"
    ext.serialization_version = "0.13.0"

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
        maven { url "https://dl.bintray.com/kotlin/kotlinx" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "com.android.tools.build:gradle:3.4.1"
    }
}

apply plugin: "kotlin-multiplatform"
apply plugin: "maven-publish"
// android
apply plugin: "com.android.library"
apply plugin: "kotlin-android-extensions"
// external
apply plugin: "kotlinx-serialization"

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

configurations {
    ktlint
}

kotlin {
    jvm {}
    iosArm64("ios") {
        compilations.main {
            cinterops {
                vulkan {
                    includeDirs "${System.getenv()["VULKAN_SDK"]}/MoltenVK/include"
                }
                kmvk {
                    includeDirs "./native/MVKView/build/Release/include"
                }
            }
        }
    }
    android {
        publishLibraryVariants("release")
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
            }
        }
        jvmMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
                implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"

                implementation "org.lwjgl:lwjgl:$lwjgl_version"
                implementation "org.lwjgl:lwjgl-stb:$lwjgl_version"
                implementation "org.lwjgl:lwjgl-glfw:$lwjgl_version"
                implementation "org.lwjgl:lwjgl-vulkan:$lwjgl_version"
            }
        }
        jvmTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
                implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
                implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
            }
        }
        iosMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serialization_version"
            }
        }
        androidMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0-RC"

                implementation "com.android.support.constraint:constraint-layout:1.1.3"

                // utils
                implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9"
            }
        }
    }
}
// android
android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 26
        versionName "1.0"
    }

    packagingOptions {
        exclude "META-INF/common.kotlin_module"
    }
}

// ios
// HACK: https://github.com/JetBrains/kotlin-native/issues/2314
task copyNativeLibs(type: Copy) {
    from "${System.getenv()["VULKAN_SDK"]}/MoltenVK"
    into "build/externals/MoltenVK"
}

cinteropVulkanIos.dependsOn copyNativeLibs

// publish
def repo = new File(rootDir, "repository")
publishing.repositories.maven {
    url "file://${repo.absolutePath}"
}

// linter
dependencies {
    ktlint "com.pinterest:ktlint:0.35.0"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}
