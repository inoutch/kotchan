package io.github.inoutch.kotchan.utility.graphic.vulkan

data class VkPhysicalDeviceFeatures(
    val robustBufferAccess: Boolean,
    val fullDrawIndexUint32: Boolean,
    val imageCubeArray: Boolean,
    val independentBlend: Boolean,
    val geometryShader: Boolean,
    val tessellationShader: Boolean,
    val sampleRateShading: Boolean,
    val dualSrcBlend: Boolean,
    val logicOp: Boolean,
    val multiDrawIndirect: Boolean,
    val drawIndirectFirstInstance: Boolean,
    val depthClamp: Boolean,
    val depthBiasClamp: Boolean,
    val fillModeNonSolid: Boolean,
    val depthBounds: Boolean,
    val wideLines: Boolean,
    val largePoints: Boolean,
    val alphaToOne: Boolean,
    val multiViewport: Boolean,
    val samplerAnisotropy: Boolean,
    val textureCompressionETC2: Boolean,
    val textureCompressionASTC_LDR: Boolean,
    val textureCompressionBC: Boolean,
    val occlusionQueryPrecise: Boolean,
    val pipelineStatisticsQuery: Boolean,
    val vertexPipelineStoresAndAtomics: Boolean,
    val fragmentStoresAndAtomics: Boolean,
    val shaderTessellationAndGeometryPointSize: Boolean,
    val shaderImageGatherExtended: Boolean,
    val shaderStorageImageExtendedFormats: Boolean,
    val shaderStorageImageMultisample: Boolean,
    val shaderStorageImageReadWithoutFormat: Boolean,
    val shaderStorageImageWriteWithoutFormat: Boolean,
    val shaderUniformBufferArrayDynamicIndexing: Boolean,
    val shaderSampledImageArrayDynamicIndexing: Boolean,
    val shaderStorageBufferArrayDynamicIndexing: Boolean,
    val shaderStorageImageArrayDynamicIndexing: Boolean,
    val shaderClipDistance: Boolean,
    val shaderCullDistance: Boolean,
    val shaderFloat64: Boolean,
    val shaderInt64: Boolean,
    val shaderInt16: Boolean,
    val shaderResourceResidency: Boolean,
    val shaderResourceMinLod: Boolean,
    val sparseBinding: Boolean,
    val sparseResidencyBuffer: Boolean,
    val sparseResidencyImage2D: Boolean,
    val sparseResidencyImage3D: Boolean,
    val sparseResidency2Samples: Boolean,
    val sparseResidency4Samples: Boolean,
    val sparseResidency8Samples: Boolean,
    val sparseResidency16Samples: Boolean,
    val sparseResidencyAliased: Boolean,
    val variableMultisampleRate: Boolean,
    val inheritedQueries: Boolean
)
